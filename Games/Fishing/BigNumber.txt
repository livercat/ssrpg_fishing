

// THIS FILE SHOULD BE DELETED BEFORE RELEASE


var utils = import Games/Fishing/Utils

var _value = 0

var _suffixes = ["", "K", "M", "B", "T"]

func _ToBigNumber(num) // internal use only
  ?Type(num) = "int"
    return num
  // :?Type(num) = "float" // Not in spec currently
  //   return Math.FloorToInt(num)
  :?Type(num) = "object"
    return num._value
  :
    utils.Panic("_ToBigNumber: Unsupported type " + Type(num))

func Add(num)
  _value = _value + _ToBigNumber(num)
  return this

func Sub(num)
  _value = _value - _ToBigNumber(num)
  return this

func Mul(num)
  _value = _value * _ToBigNumber(num)
  return this

func Div(num)
  _value = _value / _ToBigNumber(num)
  return this

func Equals(num)
  return (_value = _ToBigNumber(num))

func ToString()
  return "" + _value

func ToUI()
  // I think this function is correct?
  ? value = 0
    return "0"

  var suffixIndex = math.FloorToInt(math.Log(math.Abs(_value), 1000))

  var suffix = "E" + (3 * suffixIndex) // Engineering notation fallback
  ? suffixIndex < _suffixes.Count()
    suffix = _suffixes[suffixIndex] // Use suffix if one is available

  var sign = ""
  ?math.Sign(_value) = -1
    sign = "-"

  var significantDigits = (1.0 * math.Abs(_value)) / math.Pow(1000.0, suffixIndex)

  var formatStr = "{0:G4}" // I think?
  return string.Format(sign + formatStr + suffix, significantDigits)
