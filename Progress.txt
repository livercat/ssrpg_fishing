
var scales = math.BigNumber(storage.Get("key_scales", "0"))
var recordWeight = storage.Get("key_record", 0)
var rod = storage.Get("key_rod", 0)
var lastOnline = math.BigNumber(storage.Get("key_last_online", "0"))
var hirelings = [ storage.Get("key_hireling_0", 0),
                  storage.Get("key_hireling_1", 0),
                  storage.Get("key_hireling_2", 0),
                  storage.Get("key_hireling_3", 0),
                  storage.Get("key_hireling_4", 0),
                  storage.Get("key_hireling_5", 0),
                  storage.Get("key_hireling_6", 0)]

func AddScales(amount)
  scales.Add(amount)
  storage.Set("key_scales", scales.ToString())

func SubtractScales(amount)
  scales.Sub(amount)
  storage.Set("key_scales", scales.ToString())

func MulScales(amount)
  scales.Mul(amount)
  storage.Set("key_scales", scales.ToString())

func CheckRecord(newWeight)
  ?recordWeight < newWeight
    recordWeight = newWeight
    storage.Set("key_record", recordWeight)
    return true
  return false

func AddHireling(level)
  hirelings[level] = hirelings[level] + 1
  var k = "key_hireling_" + level
  return storage.Set(k, hirelings[level])

func UpgradeRod()
  rod++
  storage.Set("key_rod", rod)

func UpdateLastOnline()
  lastOnline = time.msbn
  storage.Set("key_last_online", lastOnline.ToString())

func IsFTUE()
  ?scales.Eq(0)
    return true
  return false

func ResetAllProgress()
  for k : storage.Keys()
    storage.Delete(k)
  loc.leave()